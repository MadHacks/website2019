{"version":3,"sources":["img/logo.png","img/aldo_leopold.jpg","img/gaylord_nelson.jpg","components/Header.js","components/About.js","components/Carbon.js","components/Sponsors.js","components/QuoteLeft.js","components/FAQ.js","components/QuoteRight.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","useStyles","makeStyles","logo","height","pointEvents","header","minHeight","display","flexDirection","alignItems","justifyContent","fontSize","color","carbon","lineHeight","applyButton","borderColor","padding","marginTop","Header","classes","react_default","a","createElement","Grid","item","xs","className","src","alt","Typography","variant","component","gutterBottom","Button","href","paddingTop","paddingLeft","textAlign","paper","maxWidth","marginBottom","backgroundColor","margin","About","props","Fragment","Paper","paddingRight","Carbon","Sponsors","root","flexGrow","avatar","width","author","QuoteLeft","container","justify","Avatar","msg","title","question","answer","questionPanel","FAQ","ExpansionPanel","ExpansionPanelSummary","aria-controls","id","ExpansionPanelDetails","style","target","marginLeft","marginRight","QuoteRight","theme","createMuiTheme","typography","fontFamily","App","ThemeProvider","spacing","aldo","gaylord","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.466c462c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b5a67670.png\";","module.exports = __webpack_public_path__ + \"static/media/aldo_leopold.4f8b2c47.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gaylord_nelson.9bf73ae7.jpg\";","import React from 'react';\nimport logo from '../img/logo.png';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport 'typeface-roboto-condensed';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles({\n  logo: {\n    height: '40vmin',\n    pointEvents: 'none',\n  },\n  header: {\n    minHeight: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: '20pt',\n    color: 'white'\n  },\n  carbon: {\n    color: '#4DBF00',\n    lineHeight:'0.2'\n  },\n  applyButton: {\n    color: '#FFFFFF',\n    borderColor: '#FFFFFF',\n    padding: '8px 24px',\n    fontSize: '1.5rem',\n    marginTop: '10px',\n  }\n});\n\nexport default function Header() {\n  const classes = useStyles();\n  const typeformLink = \"https://madhacks-2019.typeform.com/to/sSeSiB\";\n\n  return (\n    <Grid item xs={12} className={classes.header}>\n        <img src={logo} className={classes.logo} alt=\"logo\" />\n        <Typography variant=\"h1\" component=\"h2\" gutterBottom>\n            <b>MadHacks</b>\n        </Typography>\n        <Typography variant=\"h1\" component=\"h2\" gutterBottom className={classes.carbon}>\n            <b>Carbon</b>\n        </Typography>\n        <Typography variant=\"h5\" gutterBottom>\n            University of Wisconsin–Madison\n        </Typography>\n        <Typography variant=\"h5\" gutterBottom>\n            October 19-20, 2019\n        </Typography>\n        <Button variant=\"outlined\" href={typeformLink} className={classes.applyButton}>\n            Apply\n        </Button>\n    </Grid>\n  );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport 'typeface-roboto-condensed';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { getThemeProps } from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    header: {\n        paddingTop: '100px',\n        paddingLeft: 50,\n        color: 'rgb(244,154,2)',\n        textAlign: 'left',\n    },\n    paper: {\n        maxWidth: 800,\n        padding: '50px',\n        marginBottom: '100px',\n        textAlign: 'center',\n        backgroundColor: 'rgb(0,36,61, 0.75)',\n        color: '#FFFFFF',\n        margin: 'auto',\n    }\n});\n\nexport default function About(props) {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n        <Grid item xs={12}>\n            <Typography variant=\"h1\" component=\"h2\" gutterBottom className={classes.header}>\n                Wisconsin's Premier Hackathon\n            </Typography>\n        </Grid>\n        <Paper className={classes.paper} >\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" gutterBottom>\n                Madhacks is the University of Wisconsin's twice-annual hackathon, bringing together participants from all over the US and Canada for 24 hours of hacking.\n                Unlike other hackathons, MadHacks is going to be putting emphasis on the wacky, the original, and the downright impossible!\n                <br/><br/>\n                Madhacks 2019 - Carbon will take place on October 19-20, 2019 in the Education Building at UW-Madison (1000 Bascom Mall, Madison, WI 53706). We look forward to seeing you all there!\n                </Typography>\n            </Grid>\n        </Paper>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport 'typeface-roboto-condensed';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { getThemeProps } from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    header: {\n        paddingTop: '100px',\n        paddingRight: 50,\n        color: '#4DBF00',\n        textAlign: 'right',\n        \n    },\n    paper: {\n        padding: '50px',\n        marginBottom: '100px',\n        textAlign: 'center',\n        backgroundColor: 'rgb(0,36,61, 0.75)',\n        color: '#FFFFFF',\n        margin: 'auto',\n    }\n});\n\nexport default function Carbon(props) {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n        <Grid item xs={12}>\n            <Typography variant=\"h1\" component=\"h2\" gutterBottom className={classes.header}>\n                <b>Carbon?</b>\n            </Typography>\n        </Grid>\n        <Paper className={classes.paper} >\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" gutterBottom>\n                Sustainability is among the most pertinent challenges facing society today. Sustainable development describes a path to sustainability through economic development without depletion of natural resources.  \n                <br/><br/>\n                At MadHacks Carbon, we challenge students to bring ingenuity and creativity to generate novel solutions on local and global sustainability: \n                <br/><br/>\n                - What creative solutions can we contribute for energy use and waste?\n                <br/>\n                - What other areas of society can we make more sustainable?\n                <br/>\n                - What role can technology play in the solutions?\n                </Typography>\n            </Grid>\n        </Paper>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport 'typeface-roboto-condensed';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n    header: {\n        color: 'rgb(244,154,2)',\n        textAlign: 'center',\n    },\n    paper: {\n        maxWidth: 800,\n        padding: '50px',\n        marginBottom: '100px',\n        textAlign: 'center',\n        backgroundColor: 'rgb(0,36,61, 0.75)',\n        color: '#FFFFFF',\n        margin: 'auto',\n    }\n});\n\nexport default function Sponsors() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n        <Grid item xs={12}>\n            <Typography variant=\"h1\" component=\"h2\" gutterBottom className={classes.header}>\n                Our sponsors\n            </Typography>\n        </Grid>\n        <Paper className={classes.paper} >\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" gutterBottom>\n                    Sponsors to be announced soon!\n                    Interested in sponsoring? Contact us at <a href=\"mailto:=sponsorship@madhacks.io\">sponsorship@madhacks.io</a> \n                </Typography>\n            </Grid>\n        </Paper>\n    </React.Fragment>\n  );\n}\n\n\nfunction LargeSponsor(props) {\n    const classes = useStyles();\n    return (\n        <Grid item xs={12}>\n            <img src={props.children.imgSrc} className={classes} alt=\"logo\" />\n        </Grid>\n    )\n}\n\nfunction MediumSponsor(props) {\n\n}\n\nfunction smallSponsor(props) {\n    \n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport 'typeface-roboto-condensed';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n    avatar: {\n        margin: 'auto',\n        width: 300,\n        height: 300,\n        display: 'block',\n    },\n    paper: {\n        margin: 50,\n        maxWidth: '50%',\n        padding: 40,\n        marginBottom: 100,\n        textAlign: 'center',\n        backgroundColor: 'rgb(244,154,2, 0.75)',\n        color: '#FFFFFF',\n    },\n    author: {\n        textAlign: 'right',\n    },\n});\n\nexport default function QuoteLeft(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n        <Paper className={classes.paper} >\n            <Grid container justify=\"center\" alignItems=\"center\">\n                <Grid item xs>\n                    <Avatar src={props.avatar} className={classes.avatar} />\n                </Grid>\n                <Grid item xs>\n                    <Typography variant=\"h5\" gutterBottom>\n                        <em>{props.msg}</em>\n                    </Typography>\n                    <Typography variant=\"h5\" className={classes.author} gutterBottom>\n                        - {props.author}\n                    </Typography>\n                    <Typography variant=\"h6\" className={classes.author} gutterBottom>\n                        {props.title}\n                    </Typography>\n                </Grid>\n            </Grid>\n        </Paper>\n    </div>\n  );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport 'typeface-roboto-condensed';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n    },\n    header: {\n        color: 'rgb(244,154,2)',\n        textAlign: 'center',\n    },\n    question: {\n        fontSize: 40,\n    },\n    answer: {\n        fontSize: 25,\n    },\n    paper: {\n        maxWidth: 800,\n        padding: '50px',\n        marginBottom: '100px',\n        textAlign: 'center',\n        backgroundColor: 'rgb(244,154,2, 0.75)',\n        color: '#FFFFFF',\n        margin: 'auto',\n    },\n    questionPanel: {\n        backgroundColor: 'rgb(0,36,61)',\n        color: '#FFFFFF',\n    }\n});\n\nexport default function FAQ(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n        <Grid item xs={12}>\n            <Typography variant=\"h1\" component=\"h2\" gutterBottom className={classes.header}>\n                FAQs\n            </Typography>\n        </Grid>\n        <Paper className={classes.paper} >\n            <Grid item xs={12}>\n                <ExpansionPanel className={classes.questionPanel}>\n                    <ExpansionPanelSummary\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                    >\n                        <Typography className={classes.question}>What's a hackathon?</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Typography className={classes.answer}>\n                            A hackathon is an event where students gather together to work on a software or hardware project. MadHacks Fall 2018 will be a 24 hours hackathon. If this is your first time attending, check out our hackathon veteran Spencer’s medium post on <a style={{color:'rgb(244,154,2)'}} href=\"https://medium.com/@spencerfricke/how-to-do-hackathons-4a96207d5d3d\" target=\"_blank\">How to Do Hackathons</a>.\n                        </Typography>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <ExpansionPanel className={classes.questionPanel}>\n                    <ExpansionPanelSummary\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                    >\n                        <Typography className={classes.question}>Do I need a team?</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Typography className={classes.answer}>\n                            We encourage students to work with a team of 2 - 4 people but you can work individually as well. If you don't have a team yet, there will be a team formation after the opening ceremony. If you want to find a team before the event, join the #team-formation slack channel.\n                        </Typography>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <ExpansionPanel className={classes.questionPanel}>\n                    <ExpansionPanelSummary\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                    >\n                        <Typography className={classes.question}>Who can participate?</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Typography className={classes.answer}>\n                            We welcome undergraduate and graduate students of all backgrounds. You don’t need to be a Computer Science or Engineering major to attend. If you don't know how to code, we will have workshops that teach you how to code and mentors that can help you with your project. We will also be providing travel reimbursements for students travling from other schools as well!\n                        </Typography>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <ExpansionPanel className={classes.questionPanel}>\n                    <ExpansionPanelSummary\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                    >\n                        <Typography className={classes.question}>What do I need to bring?</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Typography className={classes.answer}>\n                            You need to bring a photo ID to check in. You should also bring a laptop, chargers, and anything else you will need for a 24 hour hackathon.\n                        </Typography>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <ExpansionPanel className={classes.questionPanel}>\n                    <ExpansionPanelSummary\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                    >\n                        <Typography className={classes.question}>How much does it cost?</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Typography className={classes.answer}>\n                            Admission to MadHacks is completely free. We will also be providing breakfast, lunch and dinner! There will also be workshops and activities throughout the event.\n                        </Typography>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <ExpansionPanel className={classes.questionPanel}>\n                    <ExpansionPanelSummary\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                    >\n                        <Typography className={classes.question}>Will there be travel reimbursement?</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Typography className={classes.answer}>\n                            Yes! We will assess all applications and provide travel reimbursements on a case-by-case basis. If we receive a large amount of applications from your school and your school is within 5-8 hour bus ride, we may be able to send a bus.\n                        </Typography>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <ExpansionPanel className={classes.questionPanel}>\n                    <ExpansionPanelSummary\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                    >\n                        <Typography className={classes.question}>Will there be prizes?</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Typography className={classes.answer}>\n                            Yes! We will be posting details about different prizes as we get closer to the event. Stay tuned!\n                        </Typography>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </Grid>\n        </Paper>\n    </div>\n  );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport 'typeface-roboto-condensed';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n    avatar: {\n        margin: 'auto',\n        width: 300,\n        height: 300,\n        display: 'block',\n        marginLeft: 50\n    },\n    paper: {\n        maxWidth: '50%',\n        padding: 40,\n        marginBottom: 100,\n        marginRight: 50,\n        marginLeft: 'auto',\n        textAlign: 'center',\n        backgroundColor: 'rgb(244,154,2, 0.75)',\n        color: '#FFFFFF',\n    },\n    author: {\n        textAlign: 'right',\n    },\n});\n\nexport default function QuoteRight(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n        <Paper className={classes.paper} >\n            <Grid container justify=\"center\" alignItems=\"center\">\n                <Grid item xs>\n                    <Typography variant=\"h5\" gutterBottom>\n                        <em>{props.msg}</em>\n                    </Typography>\n                    <Typography variant=\"h5\" className={classes.author} gutterBottom>\n                        - {props.author}\n                    </Typography>\n                    <Typography variant=\"h6\" className={classes.author} gutterBottom>\n                        {props.title}\n                    </Typography>\n                </Grid>\n                <Grid item xs>\n                    <Avatar src={props.avatar} className={classes.avatar} />\n                </Grid>\n            </Grid>\n        </Paper>\n    </div>\n  );\n}","import React from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport 'typeface-roboto-condensed';\nimport Grid from '@material-ui/core/Grid';\n\nimport Header from './components/Header';\nimport About from './components/About';\nimport Carbon from './components/Carbon';\nimport Sponsors from './components/Sponsors';\nimport QuoteLeft from './components/QuoteLeft';\nimport FAQ from './components/FAQ';\nimport QuoteRight from './components/QuoteRight';\n\nimport aldo from './img/aldo_leopold.jpg';\nimport gaylord from './img/gaylord_nelson.jpg';\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: '\"Roboto Condensed\"'\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container spacing={0}>\n        <Grid container item xs={12} spacing={0}>\n          <Header />\n        </Grid>\n        <Grid container item xs={12} spacing={0}>\n          <About />\n        </Grid>\n        <Grid container item xs={12} spacing={0}>\n          <Carbon />\n        </Grid>>\n        <Grid container item xs={12} spacing={0}>\n          <QuoteLeft\n            avatar={aldo}\n            author={\n              <span>Aldo Leopold, <em>A Sand County Almanac</em></span>\n            }\n            title={\n              <p>Conservationist & Professor Emeritus University of Wisconsin</p>\n            }\n            msg='“We abuse land because we regard it as a commodity belonging to us. When we see land as a community to which we belong, we may begin to use it with love and respect.”'/>\n        </Grid>\n        <Grid container item xs={12} spacing={0}>\n          <FAQ />\n        </Grid> \n        <Grid container item xs={12} spacing={0}>\n          <QuoteRight\n            avatar={gaylord}\n            author=\"Gaylord Nelson\"\n            title=\"Former Wisconsin Senator & Founder of Earth Day\"\n            msg=\"“The ultimate test of man's conscience may be his willingness to sacrifice something today for future generations whose words of thanks will not be heard.”\" />\n        </Grid>\n        <Grid container item xs={12} spacing={0}>\n          <Sponsors />\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}